name: CI
on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: crawler           # <- same as app expects
        ports:
          - 3306:3306                       # internal port is fine; mapping not required
        options: >-
          --health-cmd="mysqladmin ping -h localhost -proot"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    env:
      #  make MySQL DSN available to `go test`
      DB_DSN: root:root@tcp(mysql:3306)/crawler?parseTime=true
      #  silence Next telemetry during build/lint
      NEXT_TELEMETRY_DISABLED: '1'

    steps:
    - uses: actions/checkout@v4

    # ── Client ─────────────────────────────────────────────
    - name: Setup Node
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: npm
        cache-dependency-path: client/package-lock.json

    - name: Install client deps
      working-directory: client
      run: npm ci

    - name: Lint & test client
      working-directory: client
      run: |
        npm run lint
        npm test -- --run

    # ── Server ─────────────────────────────────────────────
    - name: Setup Go
      uses: actions/setup-go@v5
      with: { go-version: '1.22' }

    - name: Vet & test server
      working-directory: server
      run: |
        go vet ./...
        go test ./...

    # ── Docker build (cache) ───────────────────────────────
    - name: Build API image (amd64)
      run: |
        docker build \
          --platform=linux/amd64 \
          -f deployments/Dockerfile.api \
          -t api:ci .